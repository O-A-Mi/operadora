.dadosContaContainer {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.dadosDaContaTitleTela {
    color: var(--cor-padrao);
    margin: 0;
}

.dadosDaContaDescriptionTela {
    color: var(--cinza-padrao);
    font-size: 0.95rem;
    line-height: 1.25;
    margin: 0;
}

.dadosContaContent{
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  flex: 1;
}

.cardsList {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
}

.cardContainer {
    display: flex;
    flex-direction: column;
    padding: 1.25rem;
    background: var(--branco);
    border-radius: 1rem;
    box-shadow: 2px 2px 10px 0px rgba(150, 148, 149, 0.15);
}

.cardTitle {
    color: var(--cinza-escuro);
    margin: 0;
    font-size: 1rem;
}

.modalContainer {
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    overflow: hidden;
    border-radius: 1rem;
    background: var(--cor-claro);
    box-shadow: 2px 2px 10px 0px rgba(150, 148, 149, 0.5);
    width: calc(100% - var(--header-padding) * 2);
    z-index: 4;
}

.modalContent {
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
    gap: 2.25rem;
    max-height: calc(100vh - var(--header-height) * 2);
    flex: 1;
}

.modalHeader {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.modalHeader h2 {
    color: var(--cinza-escuro);
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
}

.modalBody {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    overflow-y: auto;
    max-height: calc(100% - var(--header-height));
}

.modalForm {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.inputRow,
.modalFooter {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    align-items: center;
}

.inputGroup {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    flex: 1;
}

.inputLabel {
    color: var(--cinza-padrao);
    font-size: 0.75rem;
    font-weight: 500;
    margin: 0;
}

.textInput,
.selectInput {
    appearance: none;
    border: 1px solid var(--cinza-claro);
    border-radius: 0.5rem;
    padding: 0.75rem;
    font-size: 0.85rem;
    line-height: unset;
    background-color: var(--branco);
    color: var(--cinza-escuro);
    transition: border 0.2s ease-in-out;
}

.textInput:focus,
.selectInput:focus {
    border: 1px solid var(--cor-padrao);
    outline: none;
}

.selectInputField {
    display: flex;
    align-items: center;
    position: relative;
}

.selectInput {
    width: 100%;
}

.selectInputField i {
    position: absolute;
    right: 0.75rem;
    color: var(--cinza-padrao);
    user-select: none;
    pointer-events: none;
}

.textInput.error {
    border: 1px solid var(--erro);
}

.textInputReadOnly {
  appearance: none;
  border: none;
  padding: 0.25rem 0 0.5rem;
  font-size: 0.85rem;
  line-height: unset;
  background: transparent;
  color: var(--cinza-escuro);
  transition: border 0.2s ease-in-out;
}
.textInputReadOnly:focus{
    outline: none;
}

.required {
    color: var(--erro);
}

.confirmButton {
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: center;
    background: var(--cor-padrao);
    border: none;
    border-radius: 0.5rem;
    min-width: 10rem;
    font-size: 16px;
    font-weight: 500;
    padding: 0.75rem;
    gap: 0.5rem;
    cursor: pointer;
    color: var(--branco);
    max-width: calc(50% - 0.5rem);
}

.backButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  background: transparent;
  border: none;
  color: var(--cor-padrao);
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  width: 1.5rem;
  height: 1.25rem;
}

.dadosDaContaContent {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    flex: 1;
}

.dadosDaContaCard {
    display: flex;
    flex-direction: column;
    background-color: var(--branco);
    gap: 1rem;
    padding: 1.25rem 1.5rem;
    border-radius: 1rem;
    min-width: calc(50% - 3.5rem);
    flex-grow: 1;
}

.dadosDaContaCard:last-child {
    max-width: calc(50% - 3.5rem);
}

.cardTitle {
    margin: 0;
    color: var(--cinza-escuro);
    font-size: 1rem;
    font-weight: 600;
}

.cardContent {
    display: flex;
    flex-direction: column;
    gap: 1.15rem;
}

.infoField {
    display: flex;
    flex-direction: column;
    gap: 0.65rem;
}

.infoLabel {
    color: var(--cinza-padrao);
    font-size: 0.75rem;
    font-weight: 500;
    margin: 0;
}

.infoValue {
    color: var(--cinza-escuro);
    font-size: 0.85rem;
    font-weight: 500;
    margin: 0;
}
.dadosContaCard{
  display: flex;
  flex-direction: column;
  background-color: var(--branco);
  gap: 1rem;
  padding: 1.25rem 1.5rem;
  border-radius: 1rem;
  min-width: calc(50% - 3.5rem);
  flex-grow: 1;
}
.dadosContaCard:last-child{
  max-width: calc(50% - 3.5rem);
}

@media (min-width: 768px) {
    .modalContainer {
        width: auto;
        height: auto;
        min-width: 32rem;
    }
}
.cardHeader{

}
.editButtonDesk{
  padding: 0.5rem 0;
}
.editButton,
.editButtonDesk{
  display: flex;
  align-items: center;
  justify-content: flex-start;
  color: var(--cor-padrao);
  margin: 0;
  font-size: 0.85rem;
  gap: 0.5rem;
  font-weight: 600;
  padding: 1.5rem 0.5rem 0.5rem;
  border: none;
  background: transparent;
  cursor: pointer;
}

@media (min-width: 768px) {
   .modalOverlay{
    width: auto;
    height: auto;
    min-width: 32rem;
  }
}
@media (min-width: 1024px) {
    /* Adicione estilos específicos para telas maiores que 1024px */
}

@media (min-width: 1280px) {
    /* Adicione estilos específicos para telas maiores que 1280px */
}

@media (min-width: 1600px) {
    /* Adicione estilos específicos para telas maiores que 1600px */
}


/* modal address comeco  */
.modalOverlay {
  display: flex;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  border-radius: 1rem;
  background: var(--cor-claro);
  box-shadow: 2px 2px 10px 0px rgba(150, 148, 149, 0.5);
  z-index: 4;
}

.infoLabel {
  font-weight: bold; /* Estilo para o label */
  margin-right: 10px; /* Espaçamento entre o label e o value */
}

.infoValue {
  color: #555; /* Cor mais suave para o value */
}

.closeButton {
  background-color: #007bff;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 20px; /* Espaçamento acima do botão */
  width: 100%; /* Botão ocupa toda a largura do modal */
}

.closeButton:hover {
  background-color: #0056b3;
}
.modalHeader{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.infoField value{

}
/* } modal address final */